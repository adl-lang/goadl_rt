// Code generated by goadlc v3 - DO NOT EDIT.
package go_

import ()

type GoCustomType struct {
	_GoCustomType
}

type _GoCustomType struct {
	Gotype  GoType       `json:"gotype"`
	Helpers GoHelperType `json:"helpers"`
}

func MakeAll_GoCustomType(
	gotype GoType,
	helpers GoHelperType,
) GoCustomType {
	return GoCustomType{
		_GoCustomType{
			Gotype:  gotype,
			Helpers: helpers,
		},
	}
}

func Make_GoCustomType(
	gotype GoType,
	helpers GoHelperType,
) GoCustomType {
	ret := GoCustomType{
		_GoCustomType{
			Gotype:  gotype,
			Helpers: helpers,
		},
	}
	return ret
}

type GoHelperType struct {
	_GoHelperType
}

type _GoHelperType struct {
	Name        string `json:"name"`
	Pkg         string `json:"pkg"`
	Import_path string `json:"import_path"`
}

func MakeAll_GoHelperType(
	name string,
	pkg string,
	import_path string,
) GoHelperType {
	return GoHelperType{
		_GoHelperType{
			Name:        name,
			Pkg:         pkg,
			Import_path: import_path,
		},
	}
}

func Make_GoHelperType(
	name string,
	pkg string,
	import_path string,
) GoHelperType {
	ret := GoHelperType{
		_GoHelperType{
			Name:        name,
			Pkg:         pkg,
			Import_path: import_path,
		},
	}
	return ret
}

type GoType struct {
	_GoType
}

type _GoType struct {
	Name             string   `json:"name"`
	Pkg              string   `json:"pkg"`
	Type_constraints []string `json:"type_constraints"`
	Import_path      string   `json:"import_path"`
}

func MakeAll_GoType(
	name string,
	pkg string,
	type_constraints []string,
	import_path string,
) GoType {
	return GoType{
		_GoType{
			Name:             name,
			Pkg:              pkg,
			Type_constraints: type_constraints,
			Import_path:      import_path,
		},
	}
}

func Make_GoType(
	name string,
	pkg string,
	type_constraints []string,
	import_path string,
) GoType {
	ret := GoType{
		_GoType{
			Name:             name,
			Pkg:              pkg,
			Type_constraints: type_constraints,
			Import_path:      import_path,
		},
	}
	return ret
}
